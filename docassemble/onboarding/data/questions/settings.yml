---
features:
  labels above fields: True
---
objects:
  - userdata: DAStore
  - preferences: DAObject
  - jobs: DAList
  #.using(there_are_any=True)
---
#code: |
#  preferences = userdata.get("prefs") or DAObject('preferences')
#---
#mandatory: True
#code: |
#  preferences.favorite_fruit
#  if not userdata.defined("prefs"):
#    userdata.set("prefs", preferences)    
question: |
  Einstellungen Mandant
fields:
  - Unternehmensname: preferences.company_name
  
  - note: |
      ${ jobs }
  
      ${ jobs.table }
  
      ${ jobs.add_action() }
  #tho- note: |
  #tho    Logo: [BR]
  #tho    ${ preferences.user_picture }
  #- neues Logo hochladen: new_logo
  #  datatype: yesno
  #tho - Logo: preferences.user_picture
  #tho   datatype: file
  #  #js show if: val('new_logo')
css: |
  <style>
    .file-preview {display: none;}
  </style>

continue button field: prefs_edit
---

mandatory: True
code: |
  if prefs_edit:
    #tho preferences.user_picture.set_attributes(persistent=True)
    userdata.set("prefs3", preferences)
  
---

question: |
  Neuen job hinzuf√ºgen.
fields:
  - Job: jobs[i]
#list collect: True
---
mandatory: True
code: |
  if not defined('job_list'):
    job_list = userdata.get("job_list") or []
    jobs.clear()
    for j in job_list:
      jobs.append(j)
    jobs.gathered = True
    jobs.there_are_any = True
    jobs.there_is_another = False
    
  if userdata.get("prefs3"):
    preferences = userdata.get("prefs3")
  else:
    preferences.company_name = ''
    
  prefs_edit
  tho = [j for j in jobs]
  userdata.set("job_list", [j for j in jobs])
  final_screen
---
table: jobs.table
rows: jobs
columns:
  - Job: row_item
edit: True
---  
event: final_screen
question: Stammdaten gespeichert
subquestion: |
  Unternehmensname : ${ userdata.get("prefs3").company_name }
  ${ tho }
  ${ jobs }